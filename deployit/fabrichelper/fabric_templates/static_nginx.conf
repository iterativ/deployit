server {
    listen       {{ nginx_port }};

    {% if server_names %}
        server_name  {% for server in server_names %}{{ server }} {% endfor %};
    {% endif %}
    {% if nginx_no_follow %}
    add_header X-Robots-Tag "noindex, nofollow";
    {% endif %}

    {% if ssl_cert %}
    # from https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-16-04
	# from https://cipherli.st/
    # and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    # Disable preloading HSTS for now.  You can use the commented out header line that includes
    # the "preload" directive if you understand the implications.
    #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    ssl on;

    # configured for letsencrypt certificates
    ssl_certificate /etc/letsencrypt/live/{{ server_names[0] }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ server_names[0] }}/privkey.pem;
    {% endif %}

	location '/.well-known/acme-challenge' {
		# used for letsencrypt cert creation
	    auth_basic off;
		default_type "text/plain";
		root         /tmp/letsencrypt-auto;
	}

    location /error-assets/ {
        root  /srv/www/error-pages;
        expires 10y;
        log_not_found off;
    }

    location / {
        root  {{ deploy_folder }}/{{ project_name }}/{{ env_name }}/dist;
        expires 10y;
        log_not_found off;        
    }

    error_page 503 /maintenance.html ;
    location = /maintenance.html  {
        root /srv/www/error-pages;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /srv/www/error-pages;
    }

    error_page   404  /404.html;
    location = /404.html {
        root   /srv/www/error-pages;
    }
}
